{"version":3,"sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/directives.coffee","app/scripts/filters.coffee","app/scripts/services.coffee"],"names":[],"mappings":"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","file":"../public/js/app.js","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'app.controllers'\n  'app.directives'\n  'app.filters'\n  'app.services'\n  'partials'\n])\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n    .when('/', {templateUrl: '/partials/katalog.html'})\n\n    # Catch all\n    .otherwise({redirectTo: '/'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(false)\n])\n","'use strict'\n\n### Controllers ###\n\nangular.module('app.controllers', ['ui.sortable'])\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n\n  # Uses the url to determine if the selected\n  # menu item should have the class active.\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) ->\n    $scope.activeNavId = path || '/'\n  )\n\n  # getClass compares the current url with the id.\n  # If the current url starts with the id it returns 'active'\n  # otherwise it will return '' an empty string. E.g.\n  #\n  #   # current url = '/products/1'\n  #   getClass('/products') # returns 'active'\n  #   getClass('/orders') # returns ''\n  #\n  $scope.getClass = (id) ->\n    if $scope.activeNavId.substring(0, id.length) == id\n      return 'active'\n    else\n      return ''\n])\n\n\n.controller('PagesCtrl', ($scope, $q, pagesSrv, $filter) ->\n\n  $scope.pages    = []\n  $scope.tileSize = 'm-smallTiles'\n\n  $scope.cutting      = false\n  $scope.cutPageIndex = null\n  $scope.isPreview    = false\n  $scope.isLoading    = false\n\n  $scope.cutPage = (index) ->\n    $scope.cutting      = true\n    $scope.cutPageIndex = index\n\n  $scope.pastePage = (index) ->\n    cutPage = $scope.pages[$scope.cutPageIndex]         # GET PAGE WE WANT TO MOVE\n    $scope.pages.splice index, 0, cutPage               # PASTE THE PAGE\n\n    # CUT OUT the PAGE from an OLD PLACE\n    # IF THE PAGE WAS TAKEN FROM SUBSEQUENT PLACE THEN THE ONE THAT WAS CHOSEN\n    # TO PLACE THE PAGE THAN WE NED TO ADJUST ITS INDEX\n    $scope.cutPageIndex++ if index <= $scope.cutPageIndex\n    $scope.pages.splice $scope.cutPageIndex, 1\n\n    $scope.cutting = false\n    $scope.save()\n\n  $scope.sortPages =\n    stop: (e, ui) ->\n      $scope.save()\n\n  $scope.changeTileSize = (size) ->\n    $scope.tileSize = size\n    false\n\n  loadpages = ->\n    pagesSrv.load()\n    .success (response) ->\n      $scope.pages = response\n    .error (status, error) ->\n      console.log 'not loaded', status, error\n\n  $scope.save = ->\n    pagesSrv.save($scope.pages)\n    .success (response) ->\n      console.log 'save success: ', response\n    .error (status, error) ->\n      console.log 'save error: ', status, error\n\n  $scope.delete = (index) ->\n    pagesSrv.delete(index)\n    .success (response) ->\n      $scope.pages.splice(index, 1)\n      $scope.save()\n      console.log 'delete success: ', response\n    .error (status, error) ->\n      console.log 'delete error: ', response, error\n\n  $scope.deletePageFiles = (index) ->\n    pagesSrv.delete(index)\n    .error (status, error) ->\n      console.log 'delete error: ', response, error\n\n  $scope.upload = (form) ->\n    pagesSrv.upload(form)\n    .always ->\n      $scope.hideLoader()\n\n  $scope.edit = (index) ->\n    if isNaN(index) then return false;\n    $scope.pages[index].needsRefresh = true\n    $scope.save()\n    pagesSrv.edit(index)\n\n  $scope.refresh = (index) ->\n    if isNaN(index) then return false;\n    $scope.pages[index].refreshing = true\n    pagesSrv.refresh(index).then ->\n      delete $scope.pages[index].needsRefresh\n      delete $scope.pages[index].refreshing\n      $scope.pages[index].nocache = '?' + new Date().getTime()\n      $scope.save()\n\n\n  $scope.pdf = (pages) ->\n    pagesSrv.pdf(pages)\n    .success (response) ->\n      console.log 'PDF generated! ', response\n    .error (status, error) ->\n      console.log 'Error occured while generating PDF: ', status, error\n\n  $scope.print = (page) ->\n    pagesSrv.pdf(page)\n\n  $scope.preview = (page) ->\n    previewPage = $scope.pages[page].svg.file\n    $scope.previewImgURL = \"jpg/w800/\" + $filter('encodeFilename')(previewPage) + \".jpg\"\n    $scope.isPreview = true\n\n  $scope.hidePreview = () ->\n    $scope.isPreview = false\n\n  $scope.showLoader = () ->\n    $scope.$apply () ->\n      $scope.isLoading = true\n\n  $scope.hideLoader = () ->\n    $scope.$apply () =>\n      $scope.isLoading = false\n\n  loadpages()\n)\n\n\n# .controller('TodoCtrl', [\n#   '$scope'\n\n# ($scope) ->\n\n#   $scope.todos = [\n#     text: \"learn angular\"\n#     done: true\n#   ,\n#     text: \"build an angular app\"\n#     done: false\n#   ]\n\n#   $scope.addTodo = ->\n#     $scope.todos.push\n#       text: $scope.todoText\n#       done: false\n\n#     $scope.todoText = \"\"\n\n#   $scope.remaining = ->\n#     count = 0\n#     angular.forEach $scope.todos, (todo) ->\n#       count += (if todo.done then 0 else 1)\n\n#     count\n\n#   $scope.archive = ->\n#     oldTodos = $scope.todos\n#     $scope.todos = []\n#     angular.forEach oldTodos, (todo) ->\n#       $scope.todos.push todo  unless todo.done\n\n# ])\n\n# .controller('MyCtrl1', [\n#   '$scope'\n\n# ($scope) ->\n#   $scope.onePlusOne = 2\n\n# ])\n\n# .controller('MyCtrl2', [\n#   '$scope'\n\n# ($scope) ->\n#   $scope\n# ])\n","'use strict'\n\n### Directives ###\n\n# register the module with Angular\nangular.module('app.directives', [\n  'app.services'\n])\n\n.directive('tooltip', () ->\n\trestrict: 'A'\n\tlink: (scope, element) ->\n\t\t$(element).tooltip()\n)\n\n.directive('loadpages', () ->\n\trestrict: 'A'\n\ttemplate: 'Load pages'\n\tlink: (scope, element) ->\n\t\t$(element).bind('click', (e) ->\n\t\t\te.preventDefault()\n\t\t\tscope.loadpages()\n\t\t\tfalse\n\t\t)\n)\n\n.directive('save', () ->\n\trestrict: 'A'\n\ttemplate: 'Save'\n\tlink: (scope, element) ->\n\t\t$(element).bind('click', (e) ->\n\t\t\te.preventDefault()\n\t\t\tscope.save()\n\t\t\tfalse\n\t\t)\n)\n\n.directive('pdf', () ->\n\trestrict: 'A'\n\ttemplate: 'Zbuduj katalog'\n\tlink: (scope, element) ->\n\t\t$(element).bind('click', (e) ->\n\t\t\te.preventDefault()\n\t\t\telement.text 'Robi się'\n\t\t\tscope.pdf(scope.pages)\n\t\t\t\t.success (response) ->\n\t\t\t\t\telement.text 'Zbuduj katalog'\n\t\t\tfalse\n\t\t)\n)\n\n.directive('addpage', () ->\n\trestrict: 'E'\n\ttemplate: '\n\t\t<form name=\"addPageForm\" enctype=\"multipart/form-data\" novalidate>\n\t\t\t<input required ng-model=\"pageFile\" name=\"page\" type=\"file\" class=\"addpage\">\n\t\t</form>\n\t'\n\tlink: (scope, element, attrs, formCtrl) ->\n\t\tform = element.find('form')\n\t\tinput = form.find('input[type=\"file\"]')\n\t\tisNew = not attrs.index?\n\n\t\tinput.bind 'change', ->\n\t\t\tif input.val()\n\t\t\t\tscope.showLoader()\n\t\t\t\tform.submit()\n\n\t\tform.bind 'submit', (e) ->\n\t\t\te.preventDefault()\n\n\t\t\tupload(@)\n\t\t\t.done (res) ->\n\t\t\t\tif isNew\n\t\t\t\t\tscope.pages.push res.data\n\t\t\t\t\tscope.save()\n\t\t\t\telse\n\t\t\t\t\tpage = res.data\n\t\t\t\t\treplace attrs.index, page\n\n\t\treplace = (index, page) ->\n\t\t\tscope.deletePageFiles(index)\n\t\t\t.success (res) ->\n\t\t\t\tscope.pages[index] = page\n\t\t\t\tscope.save()\n\n\t\tupload = (form) ->\n\t\t\tdef = new $.Deferred()\n\n\t\t\tscope.upload(form)\n\t\t\t.done (res) ->\n\t\t\t\tres = JSON.parse(res)\n\t\t\t\tif res.status is 'ok'\n\t\t\t\t\tdef.resolve res\n\t\t\t\telse\n\t\t\t\t\tonUploadPageFail res\n\t\t\t\t\tdef.reject res\n\n\t\t\t.fail (failResp) ->\n\t\t\t\tonUploadPageFail failResp\n\t\t\t\tdef.reject failResp\n\n\t\t\tdef.promise()\n\n\t\tonUploadPageFail = (res) ->\n\t\t\tconsole.log 'submit error', res\n\n)\n\n.directive 'delete', () ->\n\t(scope, element, attrs) ->\n\t\t$(element).click (e) ->\n\t\t\te.preventDefault()\n\t\t\tindex = parseInt attrs.index, 10\n\t\t\tif confirm 'Czy na pewno chcesz usunąć stronę? ' + '[' +  (index + 1)  + ']'\n\t\t\t\tscope.delete index\n\t\t\tfalse\n\n# .directive 'edit', () ->\n# \t(scope, element, attrs) ->\n# \t\t$(element).click (e) ->\n# \t\t\te.preventDefault()\n# \t\t\tindex = attrs.index\n# \t\t\tscope.edit index\n# \t\t\tfalse\n\n# .directive 'cut', () ->\n# \t(scope, element, attrs) ->\n# \t\t$(element).click (e) ->\n# \t\t\te.preventDefault()\n# \t\t\tindex = attrs.index\n\n# \t\t\t# SET ISCUT SELECTION FOR THIS PAGE\n# \t\t\t# scope.isCut = true\n\n# \t\t\t# if (scope.cutting && scope.isCut) || not scope.cutting\n# \t\t\t# \tscope.isCut = !scope.isCut\n# \t\t\t# \tscope.setCutting scope.isCut, index\n# \t\t\t# \tscope.$apply()\n\n# \t\t\tscope.$apply(attrs.cut)\n\n# \t\t\tfalse\n\n.directive 'paste', () ->\n\t(scope, element, attrs) ->\n\n\t\t$(element).click (e) ->\n\t\t\te.preventDefault()\n\n\t\t\t# index = attrs.index\n\t\t\t# console.log 'paste page nr ' + scope.cutPageIndex + ' before page nr ' + (parseInt(index,10)+1)\n\n\t\t\tscope.$apply(attrs.paste)\n\n\t\t\tfalse\n\n.directive 'print', () ->\n\t(scope, element) ->\n\t\t$(element).click (e) ->\n\t\t\te.preventDefault()\n\t\t\tprintframe = $('#printFrame')\n\n\t\t\tprintframe.load ->\n\t\t\t\tprintframe[0].contentWindow.print()\n\n\t\t\tprintframe[0].src = 'svg/' + scope.page.svg.file\n\n\t\t\tconsole.log scope.page\n\n\t\t\tfalse\n\n.directive 'disablepage', () ->\n\t(scope, element) ->\n\t\t$(element).click (e) ->\n\t\t\te.preventDefault()\n\t\t\tif scope.page.status is 'disable'\n\t\t\t\tscope.page.status = 'enable'\n\t\t\telse\n\t\t\t \tscope.page.status = 'disable'\n\n\t\t\tscope.save()\n\n\t\t\tfalse\n\n.directive 'lazySrc', ($window, $document) ->\n\n\tclass lazyLoader\n\t\t@test: 'test1'\n\n\tclass lazyImage\n\t\tconstructor: () ->\n\t\t\tconsole.log 'lazy image created'\n\n\t{\n\trestrict: 'A'\n\tlink: ($scope, $element) ->\n\t\tconsole.log lazyLoader.test\n\t}\n\n\n","'use strict'\n\n### Filters ###\n\nangular.module('app.filters', [])\n\n.filter('interpolate', [\n  'version',\n\n(version) ->\n  (text) ->\n    String(text).replace(/\\%VERSION\\%/mg, version)\n])\n\n.filter('encodeFilename', ()->\n  (filename) ->\n    filename.split(' ').join('_')\n)\n","'use strict'\n\n### Sevices ###\n\nangular.module('app.services', [])\n\n.factory 'version', ->\n\t\"0.2\"\n\n# .factory 'pages', ($rootScope, $http, $q) ->\n#   save: ->\n#     $http.post('http://localhost:3000/api/save/dd')\n\n#   load: ->\n# \t  console.log 'factory loading'\n# \t  $http.get('http://localhost:3000/api/pages')\n\n.service 'pagesSrv', ($rootScope, $http, $q) ->\n  @save = (json) ->\n    if not json then return $q.reject('No data to store.');\n    $http.post('http://localhost:3000/api/save', {jsondata: JSON.stringify(json)})\n\n  @load = ->\n    $http.get('http://localhost:3000/api/pages')\n\n  @pdf = (json) ->\n    console.log 'generationg PDF'\n    $http.post('http://localhost:3000/api/pdf', {jsondata: JSON.stringify(json)})\n\n  @delete = (index) ->\n    console.log 'deleting page number ' + (parseInt(index,10) + 1)\n    $http.get('http://localhost:3000/api/delete/' + index)\n\n  @edit = (index) ->\n    console.log 'edit page number ' + (index + 1)\n    $http.get('http://localhost:3000/api/edit/' + index)\n\n  @refresh = (index) ->\n    console.log 'refreshing page number ' + (index + 1)\n    $http.get('http://localhost:3000/api/refresh/' + index)\n\n  # @add = (file) ->\n  #   console.log 'service - adding file'\n  #   $http.post('http://localhost:3000/api/add')\n\n  @upload = (form) ->\n    def = new $.Deferred()\n    $(form).ajaxSubmit\n      url: 'http://localhost:3000/api/add'\n      type: 'POST'\n      timeout: 600000 # have you ever seen a 10min timeout? I bet not.\n      success: (response) ->\n        def.resolve response\n      error: (response) ->\n        console.log('srv upload error');\n        def.reject response\n\n    def.promise()\n"]}